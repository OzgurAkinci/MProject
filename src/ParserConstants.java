/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PLUS = 1;
  /** RegularExpression Id. */
  int MINUS = 2;
  /** RegularExpression Id. */
  int TIMES = 3;
  /** RegularExpression Id. */
  int DIVIDE = 4;
  /** RegularExpression Id. */
  int MOD = 5;
  /** RegularExpression Id. */
  int POWER = 6;
  /** RegularExpression Id. */
  int AND = 7;
  /** RegularExpression Id. */
  int OR = 8;
  /** RegularExpression Id. */
  int NOT = 9;
  /** RegularExpression Id. */
  int AEQ = 10;
  /** RegularExpression Id. */
  int EQ = 11;
  /** RegularExpression Id. */
  int NE = 12;
  /** RegularExpression Id. */
  int LE = 13;
  /** RegularExpression Id. */
  int LT = 14;
  /** RegularExpression Id. */
  int GT = 15;
  /** RegularExpression Id. */
  int GE = 16;
  /** RegularExpression Id. */
  int COMMA = 17;
  /** RegularExpression Id. */
  int SEMI = 18;
  /** RegularExpression Id. */
  int GUARD = 19;
  /** RegularExpression Id. */
  int LCURLY = 20;
  /** RegularExpression Id. */
  int RCURLY = 21;
  /** RegularExpression Id. */
  int LPAREN = 22;
  /** RegularExpression Id. */
  int RPAREN = 23;
  /** RegularExpression Id. */
  int LN = 24;
  /** RegularExpression Id. */
  int LOG = 25;
  /** RegularExpression Id. */
  int EXP = 26;
  /** RegularExpression Id. */
  int SIN = 27;
  /** RegularExpression Id. */
  int COS = 28;
  /** RegularExpression Id. */
  int TAN = 29;
  /** RegularExpression Id. */
  int ABS = 30;
  /** RegularExpression Id. */
  int SQRT = 31;
  /** RegularExpression Id. */
  int ROUND = 32;
  /** RegularExpression Id. */
  int DRV = 33;
  /** RegularExpression Id. */
  int PRINT = 34;
  /** RegularExpression Id. */
  int OTHER = 35;
  /** RegularExpression Id. */
  int ID = 36;
  /** RegularExpression Id. */
  int NUM = 37;
  /** RegularExpression Id. */
  int DNUM = 38;
  /** RegularExpression Id. */
  int STR = 39;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"^\"",
    "\"&&\"",
    "\"||\"",
    "\"!\"",
    "\"=\"",
    "\"==\"",
    "\"/=\"",
    "\"<\"",
    "\"<=\"",
    "\">=\"",
    "\">\"",
    "\",\"",
    "\";\"",
    "\"|\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"ln\"",
    "\"log\"",
    "\"exp\"",
    "\"sin\"",
    "\"cos\"",
    "\"tan\"",
    "\"abs\"",
    "\"sqrt\"",
    "\"round\"",
    "\"drv\"",
    "\"print\"",
    "\"otherwise\"",
    "<ID>",
    "<NUM>",
    "<DNUM>",
    "<STR>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
  };

}
